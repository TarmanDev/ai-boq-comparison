import streamlit as st
import pandas as pd

st.set_page_config(
    page_title="AI BOQ Comparison",
    page_icon="üìä",
    layout="wide"
)

st.title("üèóÔ∏è AI BOQ Comparison Tool")
st.markdown("‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö BOQ ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏î‡πâ‡∏ß‡∏¢ AI")

# Sidebar for file upload
with st.sidebar:
    st.header("üìÅ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå BOQ")
    
    file1 = st.file_uploader(
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå BOQ ‡∏ó‡∏µ‡πà 1",
        type=['xlsx', 'xls', 'csv'],
        key="file1"
    )
    
    file2 = st.file_uploader(
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå BOQ ‡∏ó‡∏µ‡πà 2", 
        type=['xlsx', 'xls', 'csv'],
        key="file2"
    )
    
    if st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö"):
        if file1 and file2:
            st.success("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•...")
            
            # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö
            try:
                if file1.name.endswith('.csv'):
                    df1 = pd.read_csv(file1)
                else:
                    df1 = pd.read_excel(file1)
                
                if file2.name.endswith('.csv'):
                    df2 = pd.read_csv(file2)
                else:
                    df2 = pd.read_excel(file2)
                
                st.session_state['df1'] = df1
                st.session_state['df2'] = df2
                st.session_state['file1_name'] = file1.name
                st.session_state['file2_name'] = file2.name
                
            except Exception as e:
                st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå: {str(e)}")
        else:
            st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á 2 ‡πÑ‡∏ü‡∏•‡πå")

# Main content area
if 'df1' in st.session_state and 'df2' in st.session_state:
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader(f"üìã {st.session_state['file1_name']}")
        st.dataframe(st.session_state['df1'].head())
        st.write(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß: {len(st.session_state['df1'])}")
        
    with col2:
        st.subheader(f"üìã {st.session_state['file2_name']}")
        st.dataframe(st.session_state['df2'].head())
        st.write(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß: {len(st.session_state['df2'])}")
        
    st.subheader("üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö")
    st.info("üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤...")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    col1, col2 = st.columns(2)
    with col1:
        st.write("**‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà 1:**")
        st.write(list(st.session_state['df1'].columns))
    
    with col2:
        st.write("**‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà 2:**")
        st.write(list(st.session_state['df2'].columns))

else:
    st.info("üëÜ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå BOQ 2 ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Sidebar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
    st.subheader("üìÑ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö")
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.write("**Excel (.xlsx, .xls)**")
        st.write("- Microsoft Excel")
        st.write("- Google Sheets (Export)")
        
    with col2:
        st.write("**CSV (.csv)**")
        st.write("- Comma Separated Values")
        st.write("- Plain text format")
        
    with col3:
        st.write("**‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á**")
        sample_data = {
            '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£': ['‡∏á‡∏≤‡∏ô‡∏Ç‡∏∏‡∏î‡∏î‡∏¥‡∏ô', '‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏µ‡∏ï', '‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏≠‡∏¥‡∏ê'],
            '‡∏´‡∏ô‡πà‡∏ß‡∏¢': ['‡∏•‡∏ö.‡∏°.', '‡∏•‡∏ö.‡∏°.', '‡∏ï‡∏£.‡∏°.'],
            '‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì': [100, 50, 200],
            '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢': [150, 3500, 500],
            '‡∏£‡∏ß‡∏°': [15000, 175000, 100000]
        }
        st.dataframe(pd.DataFrame(sample_data))